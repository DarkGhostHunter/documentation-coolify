openapi: "3.0.2"
info:
  title: Coolify API
  version: "1.0"
servers:
  - url: https://app.coolify.io/v1
    description: Coolify Cloud API. Change the host to your own instance if you are self-hosting.
paths:
  /deploy:
    get:
      summary: Deploy
      description: Deploy a resource by UUID or tag.
      parameters:
        - in: query
          name: uuid
          required: true
          schema:
            type: string
          description: The resource to deploy by UUID. Could be a comma separated list of UUIDs.
          allowReserved: true
          style: form
        - in: query
          name: tag
          required: true
          schema:
            type: string
          description: The resource to deploy by tag. Could be a comma separated list of tags.
          allowReserved: true
          style: form
      responses:
        "200":
          description: OK
  /deployments:
    get:
      summary: Deployments List
      description: Get the list of currently running deployments.
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application_id:
                    type: string
                    description: The application's id.
                  application_name:
                    type: string
                    description: The application's name.
                  commit:
                    type: string
                    description: The commit hash.
                  commit_message:
                    type: string
                    nullable: true
                    description: The commit message.
                  deployment_url:
                    type: string
                    description: The deployment URL.
                  deployment_uuid:
                    type: string
                    description: The deployment's UUID.
                  is_api:
                    type: boolean
                    description: Is the deployment requested via the API.
                  is_webhook:
                    type: boolean
                    description: Is the deployment requested via a webhook.
                  pull_request_id:
                    type: integer
                    description: The pull request's ID. 0 means it is not a pull request.
                  restart_only:
                    type: boolean
                    description: Is the deployment a restart only.
                  force_rebuild:
                    type: boolean
                    description: Is the deployment a force rebuild (no-cache).
                  rollback:
                    type: boolean
                    description: Is the deployment a rollback.
                  server_id:
                    type: integer
                    description: The server's ID.
                  server_name:
                    type: string
                    description: The server's name.
                  status:
                    type: string
                    description: The deployment's status.
                  created_at:
                    type: string
                    format: date-time
                    description: The deployment's creation date.
                  updated_at:
                    type: string
                    format: date-time
                    description: The deployment's last update date.

  /deployments/{uuid}:
    get:
      summary: Deployments by UUID
      description: Get a history of a deployment by UUID.
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The deployment's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application_id:
                    type: string
                    description: The application's id.
                  application_name:
                    type: string
                    description: The application's name.
                  commit:
                    type: string
                    description: The commit hash.
                  commit_message:
                    type: string
                    nullable: true
                    description: The commit message.
                  deployment_url:
                    type: string
                    description: The deployment URL.
                  deployment_uuid:
                    type: string
                    description: The deployment's UUID.
                  logs:
                    type: string
                    description: The deployment's logs.
                  is_api:
                    type: boolean
                    description: Is the deployment requested via the API.
                  is_webhook:
                    type: boolean
                    description: Is the deployment requested via a webhook.
                  pull_request_id:
                    type: integer
                    description: The pull request's ID. 0 means it is not a pull request.
                  restart_only:
                    type: boolean
                    description: Is the deployment a restart only.
                  force_rebuild:
                    type: boolean
                    description: Is the deployment a force rebuild (no-cache).
                  rollback:
                    type: boolean
                    description: Is the deployment a rollback.
                  server_id:
                    type: integer
                    description: The server's ID.
                  server_name:
                    type: string
                    description: The server's name.
                  status:
                    type: string
                    description: The deployment's status.
                  created_at:
                    type: string
                    format: date-time
                    description: The deployment's creation date.
                  updated_at:
                    type: string
                    format: date-time
                    description: The deployment's last update date.
  /teams:
    get:
      summary: Teams List
      description: Get the list of teams for the currently authenticated user.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The team's ID.
                    description:
                      type: string
                      description: The team's description.
                    name:
                      type: string
                      description: The team's name.
                    discord_enabled:
                      type: boolean
                      description: Is Discord enabled.
                    discord_notifications_database_backups:
                      type: boolean
                      description: Discord notifications for database backups.
                    discord_notifications_deployments:
                      type: boolean
                      description: Discord notifications for deployments.
                    discord_notifications_scheduled_tasks:
                      type: boolean
                      description: Discord notifications for scheduled tasks.
                    discord_notifications_status_changes:
                      type: boolean
                      description: Discord notifications for status changes.
                    discord_notifications_test:
                      type: boolean
                      description: Discord notifications for test.
                    discord_webhook_url:
                      type: string
                      description: Discord webhook URL.
                    personal_team:
                      type: boolean
                      description: Is the team personal.
                    resend_enabled:
                      type: boolean
                      description: Is resend enabled.
                    resend_api_key:
                      type: string
                      nullable: true
                      description: Resend API key.
                    show_boarding:
                      type: boolean
                      description: Show boarding process.
                    smtp_enabled:
                      type: boolean
                      description: Is SMTP enabled.
                    smtp_encryption:
                      type: string
                      nullable: true
                      description: SMTP encryption.
                    smtp_from_address:
                      type: string
                      nullable: true
                      description: SMTP from address.
                    smtp_from_name:
                      type: string
                      nullable: true
                      description: SMTP from name.
                    smtp_host:
                      type: string
                      nullable: true
                      description: SMTP host.
                    smtp_notifications_database_backups:
                      type: boolean
                      description: SMTP notifications for database backups.
                    smtp_notifications_deployments:
                      type: boolean
                      description: SMTP notifications for deployments.
                    smtp_notifications_scheduled_tasks:
                      type: boolean
                      description: SMTP notifications for scheduled tasks.
                    smtp_notifications_status_changes:
                      type: boolean
                      description: SMTP notifications for status changes.
                    smtp_notifications_test:
                      type: boolean
                      description: SMTP notifications for test.
                    smtp_password:
                      type: string
                      nullable: true
                      description: SMTP password.
                    smtp_port:
                      type: integer
                      nullable: true
                      description: SMTP port.
                    smtp_recipients:
                      type: string
                      nullable: true
                      description: SMTP recipients.
                    smtp_timeout:
                      type: integer
                      nullable: true
                      description: SMTP timeout.
                    smtp_username:
                      type: string
                      nullable: true
                      description: SMTP username.
                    telegram_enabled:
                      type: boolean
                      description: Is Telegram enabled.
                    telegram_chat_id:
                      type: string
                      description: Telegram chat ID.
                    telegram_notifications_database_backups:
                      type: boolean
                      description: Telegram notifications for database backups.
                    telegram_notifications_database_backups_message_thread_id:
                      type: string
                      description: Telegram notifications for database backups message thread ID.
                    telegram_notifications_deployments:
                      type: boolean
                      description: Telegram notifications for deployments.
                    telegram_notifications_deployments_message_thread_id:
                      type: string
                      description: Telegram notifications for deployments message thread ID.
                    telegram_notifications_scheduled_tasks:
                      type: boolean
                      description: Telegram notifications for scheduled tasks.
                    telegram_notifications_scheduled_tasks_thread_id:
                      type: string
                      description: Telegram notifications for scheduled tasks thread ID.
                    telegram_notifications_status_changes:
                      type: boolean
                      description: Telegram notifications for status changes.
                    telegram_notifications_status_changes_message_thread_id:
                      type: string
                      description: Telegram notifications for status changes message thread ID.
                    telegram_notifications_test:
                      type: boolean
                      description: Telegram notifications for test.
                    telegram_notifications_test_message_thread_id:
                      type: string
                      description: Telegram notifications for test message thread ID.
                    telegram_token:
                      type: string
                      description: Telegram token.
                    use_instance_email_settings:
                      type: boolean
                      description: Use instance email settings.
                    created_at:
                      type: string
                      format: date-time
                      description: The team's creation date.
                    updated_at:
                      type: string
                      format: date-time
                      description: The team's last update date.
  /team/{teamId}:
    get:
      summary: Team by Id
      description: Get a team by `Id`.
      parameters:
        - in: path
          name: teamId
          required: true
          schema:
            type: string
          description: The team ID.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "404":
          description: Team not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Team not found.
                  docs:
                    type: string
                    example: "https://coolify.io/docs/api-reference/get-team-by-teamid-members"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  description:
                    type: string
                  name:
                    type: string
                  discord_enabled:
                    type: boolean
                  discord_notifications_database_backups:
                    type: boolean
                  discord_notifications_deployments:
                    type: boolean
                  discord_notifications_scheduled_tasks:
                    type: boolean
                  discord_notifications_status_changes:
                    type: boolean
                  discord_notifications_test:
                    type: boolean
                  discord_webhook_url:
                    type: string
                  personal_team:
                    type: boolean
                  resend_api_key:
                    type: string
                    nullable: true
                  resend_enabled:
                    type: boolean
                  show_boarding:
                    type: boolean
                  smtp_enabled:
                    type: boolean
                  smtp_encryption:
                    type: string
                    nullable: true
                  smtp_from_address:
                    type: string
                    nullable: true
                  smtp_from_name:
                    type: string
                    nullable: true
                  smtp_host:
                    type: string
                    nullable: true
                  smtp_notifications_database_backups:
                    type: boolean
                  smtp_notifications_deployments:
                    type: boolean
                  smtp_notifications_scheduled_tasks:
                    type: boolean
                  smtp_notifications_status_changes:
                    type: boolean
                  smtp_notifications_test:
                    type: boolean
                  smtp_password:
                    type: string
                    nullable: true
                  smtp_port:
                    type: integer
                    nullable: true
                  smtp_recipients:
                    type: string
                    nullable: true
                  smtp_timeout:
                    type: integer
                    nullable: true
                  smtp_username:
                    type: string
                    nullable: true
                  telegram_chat_id:
                    type: string
                  telegram_enabled:
                    type: boolean
                  telegram_notifications_database_backups:
                    type: boolean
                  telegram_notifications_database_backups_message_thread_id:
                    type: string
                  telegram_notifications_deployments:
                    type: boolean
                  telegram_notifications_deployments_message_thread_id:
                    type: string
                  telegram_notifications_scheduled_tasks:
                    type: boolean
                  telegram_notifications_scheduled_tasks_thread_id:
                    type: string
                  telegram_notifications_status_changes:
                    type: boolean
                  telegram_notifications_status_changes_message_thread_id:
                    type: string
                  telegram_notifications_test:
                    type: boolean
                  telegram_notifications_test_message_thread_id:
                    type: string
                  telegram_token:
                    type: string
                  use_instance_email_settings:
                    type: boolean
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
  /team/{teamId}/members:
    get:
      summary: Team Members
      description: Get the list of members in a team by `teamId`.
      parameters:
        - in: path
          name: teamId
          required: true
          schema:
            type: string
          description: The team ID.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "404":
          description: Team not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Team not found.
                  docs:
                    type: string
                    example: "https://coolify.io/docs/api-reference/get-team-by-teamid-members"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
                    email_verified_at:
                      type: string
                      format: date-time
                    force_password_reset:
                      type: boolean
                    marketing_emails:
                      type: boolean
                    two_factor_confirmed_at:
                      type: string
                      format: date-time
                      nullable: true
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
  /team/current:
    get:
      summary: Team Authenticated
      description: Get the currently authenticated team.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  description:
                    type: string
                  name:
                    type: string
                  discord_enabled:
                    type: boolean
                  discord_notifications_database_backups:
                    type: boolean
                  discord_notifications_deployments:
                    type: boolean
                  discord_notifications_scheduled_tasks:
                    type: boolean
                  discord_notifications_status_changes:
                    type: boolean
                  discord_notifications_test:
                    type: boolean
                  discord_webhook_url:
                    type: string
                  personal_team:
                    type: boolean
                  resend_api_key:
                    type: string
                    nullable: true
                  resend_enabled:
                    type: boolean
                  show_boarding:
                    type: boolean
                  smtp_enabled:
                    type: boolean
                  smtp_encryption:
                    type: string
                    nullable: true
                  smtp_from_address:
                    type: string
                    nullable: true
                  smtp_from_name:
                    type: string
                    nullable: true
                  smtp_host:
                    type: string
                    nullable: true
                  smtp_notifications_database_backups:
                    type: boolean
                  smtp_notifications_deployments:
                    type: boolean
                  smtp_notifications_scheduled_tasks:
                    type: boolean
                  smtp_notifications_status_changes:
                    type: boolean
                  smtp_notifications_test:
                    type: boolean
                  smtp_password:
                    type: string
                    nullable: true
                  smtp_port:
                    type: integer
                    nullable: true
                  smtp_recipients:
                    type: string
                    nullable: true
                  smtp_timeout:
                    type: integer
                    nullable: true
                  smtp_username:
                    type: string
                    nullable: true
                  telegram_chat_id:
                    type: string
                  telegram_enabled:
                    type: boolean
                  telegram_notifications_database_backups:
                    type: boolean
                  telegram_notifications_database_backups_message_thread_id:
                    type: string
                  telegram_notifications_deployments:
                    type: boolean
                  telegram_notifications_deployments_message_thread_id:
                    type: string
                  telegram_notifications_scheduled_tasks:
                    type: boolean
                  telegram_notifications_scheduled_tasks_thread_id:
                    type: string
                  telegram_notifications_status_changes:
                    type: boolean
                  telegram_notifications_status_changes_message_thread_id:
                    type: string
                  telegram_notifications_test:
                    type: boolean
                  telegram_notifications_test_message_thread_id:
                    type: string
                  telegram_token:
                    type: string
                  use_instance_email_settings:
                    type: boolean
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
  /team/current/members:
    get:
      summary: Team Members Authenticated
      description: Get the list of members in the currently authenticated team.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
                    email_verified_at:
                      type: string
                      format: date-time
                    force_password_reset:
                      type: boolean
                    marketing_emails:
                      type: boolean
                    two_factor_confirmed_at:
                      type: string
                      format: date-time
                      nullable: true
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
  /projects:
    get:
      summary: Projects List
      description: "Get list of projects"
      parameters: []
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    uuid:
                      type: string
                    description:
                      type: string
                    name:
                      type: string
                    environments:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          project_id:
                            type: integer
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                          description:
                            type: string
                            nullable: true
                    team_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
  /projects/{uuid}:
    get:
      summary: Project by UUID
      description: "Get a project by UUID"
      parameters:
        - in: path
          name: projectUuuid
          required: true
          schema:
            type: string
          description: The project's UUID.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "404":
          description: Project not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Project not found.
                  docs:
                    type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  description:
                    type: string
                  name:
                    type: string
                  environments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        project_id:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        description:
                          type: string
                          nullable: true
                  team_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
  /projects/{uuid}/{environment}:
    get:
      summary: Project Environments
      description: "Get a project by UUID and environment name."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The project's UUID.
        - in: path
          name: environment
          required: true
          schema:
            type: string
          description: The environment name.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "404":
          description: Project not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Project not found.
                  docs:
                    type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    project_id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                      nullable: true
                    applications:
                      type: array
                    mariadbs:
                      type: array
                    mongodbs:
                      type: array
                    mysqls:
                      type: array
                    postgresqls:
                      type: array
                    redis:
                      type: array
                    services:
                      type: array
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
  /security/keys:
    get:
      summary: Private Keys List
      description: "Get the list of private keys."
      parameters: []
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    uuid:
                      type: string
                    description:
                      type: string
                    name:
                      type: string
                    is_git_related:
                      type: boolean
                    private_key:
                      type: string
                    team_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
    post:
      summary: Private Key Create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - private_key
              properties:
                name:
                  type: string
                  example: "My Private Key"
                  description: "The name of the private key."
                description:
                  type: string
                  example: "My private key description"
                  description: "A description for the private key."
                private_key:
                  type: string
                  example: "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAq3"
                  description: "An OPENSSH private key in one line. Use `\\n` for new lines."
      description: "Create a private key."
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string

  /security/keys/{uuid}:
    get:
      summary: Private Key by UUID
      description: "Get a private key by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The private key's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  description:
                    type: string
                  name:
                    type: string
                  is_git_related:
                    type: boolean
                  private_key:
                    type: string
                  team_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    patch:
      summary: Private Key update
      description: "Update a private key."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "My Private Key"
                  description: "The name of the private key."
                description:
                  type: string
                  example: "My private key description"
                  description: "A description for the private key."
                private_key:
                  type: string
                  example: "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAq3"
                  description: "An OPENSSH private key in one line. Use `\\n` for new lines."
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "404":
          description: Private Key not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private Key not found.
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
    delete:
      summary: Private Key delete
      description: "Delete a private key."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The private key's UUID.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "404":
          description: Private Key not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private Key not found.
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Key deleted.
  /servers:
    get:
      summary: Servers List
      description: "Get the list of servers."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    uuid:
                      type: string
                    name:
                      type: string
                    ip:
                      type: string
                    is_reachable:
                      type: boolean
                    is_usable:
                      type: boolean
                    port:
                      type: integer
                    settings:
                      type: object
                      properties:
                        id:
                          type: integer
                        cleanup_after_percentage:
                          type: integer
                        concurrent_builds:
                          type: integer
                        dynamic_timeout:
                          type: integer
                        force_disabled:
                          type: boolean
                        is_build_server:
                          type: boolean
                        is_cloudflare_tunnel:
                          type: boolean
                        is_jump_server:
                          type: boolean
                        is_logdrain_axiom_enabled:
                          type: boolean
                        is_logdrain_custom_enabled:
                          type: boolean
                        is_logdrain_highlight_enabled:
                          type: boolean
                        is_logdrain_newrelic_enabled:
                          type: boolean
                        is_metrics_enabled:
                          type: boolean
                        is_reachable:
                          type: boolean
                        is_server_api_enabled:
                          type: boolean
                        is_swarm_manager:
                          type: boolean
                        is_swarm_worker:
                          type: boolean
                        is_usable:
                          type: boolean
                        logdrain_axiom_api_key:
                          type: string
                          nullable: true
                        logdrain_axiom_dataset_name:
                          type: string
                          nullable: true
                        logdrain_custom_config:
                          type: string
                          nullable: true
                        logdrain_custom_config_parser:
                          type: string
                          nullable: true
                        logdrain_highlight_project_id:
                          type: string
                          nullable: true
                        logdrain_newrelic_base_uri:
                          type: string
                          nullable: true
                        logdrain_newrelic_license_key:
                          type: string
                          nullable: true
                        metrics_history_days:
                          type: integer
                        metrics_refresh_rate_seconds:
                          type: integer
                        metrics_token:
                          type: string
                        server_id:
                          type: integer
                        wildcard_domain:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                    user:
                      type: string
  /servers/{uuid}:
    get:
      summary: Server By UUID
      description: "Get a server by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The server's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  description:
                    type: string
                  name:
                    type: string
                  high_disk_usage_notification_sent:
                    type: boolean
                  ip:
                    type: string
                  log_drain_notification_sent:
                    type: boolean
                  port:
                    type: integer
                  private_key_id:
                    type: integer
                  proxy:
                    type: object
                    properties:
                      status:
                        type: string
                      type:
                        type: string
                      last_saved_settings:
                        type: string
                      last_applied_settings:
                        type: string
                      force_stop:
                        type: boolean
                      redirect_url:
                        type: string
                        nullable: true
                  settings:
                    type: object
                    properties:
                      id:
                        type: integer
                      cleanup_after_percentage:
                        type: integer
                      concurrent_builds:
                        type: integer
                      dynamic_timeout:
                        type: integer
                      force_disabled:
                        type: boolean
                      is_build_server:
                        type: boolean
                      is_cloudflare_tunnel:
                        type: boolean
                      is_jump_server:
                        type: boolean
                      is_logdrain_axiom_enabled:
                        type: boolean
                      is_logdrain_custom_enabled:
                        type: boolean
                      is_logdrain_highlight_enabled:
                        type: boolean
                      is_logdrain_newrelic_enabled:
                        type: boolean
                      is_metrics_enabled:
                        type: boolean
                      is_reachable:
                        type: boolean
                      is_server_api_enabled:
                        type: boolean
                      is_swarm_manager:
                        type: boolean
                      is_swarm_worker:
                        type: boolean
                      is_usable:
                        type: boolean
                      logdrain_axiom_api_key:
                        type: string
                        nullable: true
                      logdrain_axiom_dataset_name:
                        type: string
                        nullable: true
                      logdrain_custom_config:
                        type: string
                        nullable: true
                      logdrain_custom_config_parser:
                        type: string
                        nullable: true
                      logdrain_highlight_project_id:
                        type: string
                        nullable: true
                      logdrain_newrelic_base_uri:
                        type: string
                        nullable: true
                      logdrain_newrelic_license_key:
                        type: string
                        nullable: true
                      metrics_history_days:
                        type: integer
                      metrics_refresh_rate_seconds:
                        type: integer
                      metrics_token:
                        type: string
                      server_id:
                        type: integer
                      wildcard_domain:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                  swarm_cluster:
                    type: string
                    nullable: true
                  team_id:
                    type: integer
                  unreachable_count:
                    type: integer
                  unreachable_notification_sent:
                    type: boolean
                  user:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
  /servers/{uuid}/domains:
    get:
      summary: Server Domains By UUID
      description: "Get a server's domains by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The server's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ip:
                    type: string
                  domains:
                    type: array
                    items:
                      type: string
  /servers/{uuid}/resources:
    get:
      summary: Server Resources By UUID
      description: "Get a server's resources by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The server's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  name:
                    type: string
                  type:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  status:
                    type: string
  /resources:
    get:
      summary: Resources List
      description: "Get the list of resources (applications, databases, services)."
      parameters: []
      responses:
        "200":
          description: OK
  /applications:
    get:
      summary: Applications List
      description: "Get the list of applications."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    uuid:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    additional_servers:
                      type: array
                      items:
                        type: string
                    base_directory:
                      type: string
                    build_command:
                      type: string
                    build_pack:
                      type: string
                    config_hash:
                      type: string
                    custom_docker_run_options:
                      type: string
                    custom_healthcheck_found:
                      type: boolean
                    custom_labels:
                      type: string
                    destination_id:
                      type: integer
                    destination_type:
                      type: string
                    docker_compose:
                      type: string
                    docker_compose_custom_build_command:
                      type: string
                    docker_compose_custom_start_command:
                      type: string
                    docker_compose_domains:
                      type: string
                    docker_compose_location:
                      type: string
                    docker_compose_raw:
                      type: string
                    docker_registry_image_name:
                      type: string
                    docker_registry_image_tag:
                      type: string
                    dockerfile:
                      type: string
                    dockerfile_location:
                      type: string
                    dockerfile_target_build:
                      type: string
                    environment_id:
                      type: integer
                    fqdn:
                      type: string
                    git_branch:
                      type: string
                    git_commit_sha:
                      type: string
                    git_full_url:
                      type: string
                    git_repository:
                      type: string
                    health_check_enabled:
                      type: boolean
                    health_check_host:
                      type: string
                    health_check_interval:
                      type: integer
                    health_check_method:
                      type: string
                    health_check_path:
                      type: string
                    health_check_port:
                      type: integer
                    health_check_response_text:
                      type: string
                    health_check_retries:
                      type: integer
                    health_check_return_code:
                      type: integer
                    health_check_scheme:
                      type: string
                    health_check_start_period:
                      type: integer
                    health_check_timeout:
                      type: integer
                    install_command:
                      type: string
                    laravel_through_key:
                      type: integer
                    limits_cpu_shares:
                      type: integer
                    limits_cpus:
                      type: string
                    limits_cpuset:
                      type: string
                    limits_memory:
                      type: string
                    limits_memory_reservation:
                      type: string
                    limits_memory_swap:
                      type: string
                    limits_memory_swappiness:
                      type: integer
                    manual_webhook_secret_bitbucket:
                      type: string
                    manual_webhook_secret_gitea:
                      type: string
                    manual_webhook_secret_github:
                      type: string
                    manual_webhook_secret_gitlab:
                      type: string
                    ports_exposes:
                      type: string
                    ports_mappings:
                      type: string
                    post_deployment_command:
                      type: string
                    post_deployment_command_container:
                      type: string
                    pre_deployment_command:
                      type: string
                    pre_deployment_command_container:
                      type: string
                    preview_url_template:
                      type: string
                    private_key_id:
                      type: integer
                    publish_directory:
                      type: string
                    redirect:
                      type: string
                      enum:
                        - both
                        - www
                        - non-www
                    repository_project_id:
                      type: integer
                    source_id:
                      type: integer
                    source_type:
                      type: string
                    start_command:
                      type: string
                    static_image:
                      type: string
                    status:
                      type: string
                    swarm_placement_constraints:
                      type: string
                    swarm_replicas:
                      type: integer
                    watch_paths:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    deleted_at:
                      type: string
                      format: date-time
  /applications/public:
    post:
      summary: Application Create Public
      description: "Create a public application."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_uuid
                - environment_name
                - server_uuid
                - build_pack
                - git_repository
                - git_branch
                - ports_exposes
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy application after creation.
                name:
                  type: string
                description:
                  type: string
                project_uuid:
                  type: string
                environment_name:
                  type: string
                server_uuid:
                  type: string
                destination_uuid:
                  type: string
                domains:
                  type: string
                is_static:
                  type: boolean
                git_repository:
                  type: string
                git_branch:
                  type: string
                git_commit_sha:
                  type: string
                docker_registry_image_name:
                  type: string
                docker_registry_image_tag:
                  type: string
                build_pack:
                  type: string
                install_command:
                  type: string
                build_command:
                  type: string
                start_command:
                  type: string
                ports_exposes:
                  type: string
                ports_mappings:
                  type: string
                base_directory:
                  type: string
                publish_directory:
                  type: string
                health_check_enabled:
                  type: boolean
                health_check_path:
                  type: string
                health_check_port:
                  type: integer
                health_check_host:
                  type: string
                health_check_method:
                  type: string
                health_check_return_code:
                  type: integer
                health_check_scheme:
                  type: string
                health_check_response_text:
                  type: string
                health_check_interval:
                  type: integer
                health_check_timeout:
                  type: integer
                health_check_retries:
                  type: integer
                health_check_start_period:
                  type: integer
                limits_memory:
                  type: string
                limits_memory_swap:
                  type: string
                limits_memory_swappiness:
                  type: integer
                limits_memory_reservation:
                  type: string
                limits_cpus:
                  type: string
                limits_cpuset:
                  type: string
                limits_cpu_shares:
                  type: integer
                custom_labels:
                  type: string
                custom_docker_run_options:
                  type: string
                post_deployment_command:
                  type: string
                post_deployment_command_container:
                  type: string
                pre_deployment_command:
                  type: string
                pre_deployment_command_container:
                  type: string
                manual_webhook_secret_github:
                  type: string
                manual_webhook_secret_gitlab:
                  type: string
                manual_webhook_secret_bitbucket:
                  type: string
                manual_webhook_secret_gitea:
                  type: string
                redirect:
                  type: string
                  enum:
                    - both
                    - www
                    - non-www
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  domains:
                    type: string
  /applications/private-github-app:
    post:
      summary: Application Create Private Github App
      description: "Create a private application with a Github App."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_uuid
                - environment_name
                - server_uuid
                - github_app_uuid
                - build_pack
                - git_repository
                - git_branch
                - ports_exposes
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy application after creation.
                name:
                  type: string
                description:
                  type: string
                project_uuid:
                  type: string
                environment_name:
                  type: string
                server_uuid:
                  type: string
                destination_uuid:
                  type: string
                github_app_uuid:
                  type: string
                domains:
                  type: string
                is_static:
                  type: boolean
                git_repository:
                  type: string
                git_branch:
                  type: string
                git_commit_sha:
                  type: string
                docker_registry_image_name:
                  type: string
                docker_registry_image_tag:
                  type: string
                build_pack:
                  type: string
                install_command:
                  type: string
                build_command:
                  type: string
                start_command:
                  type: string
                ports_exposes:
                  type: string
                ports_mappings:
                  type: string
                base_directory:
                  type: string
                publish_directory:
                  type: string
                health_check_enabled:
                  type: boolean
                health_check_path:
                  type: string
                health_check_port:
                  type: integer
                health_check_host:
                  type: string
                health_check_method:
                  type: string
                health_check_return_code:
                  type: integer
                health_check_scheme:
                  type: string
                health_check_response_text:
                  type: string
                health_check_interval:
                  type: integer
                health_check_timeout:
                  type: integer
                health_check_retries:
                  type: integer
                health_check_start_period:
                  type: integer
                limits_memory:
                  type: string
                limits_memory_swap:
                  type: string
                limits_memory_swappiness:
                  type: integer
                limits_memory_reservation:
                  type: string
                limits_cpus:
                  type: string
                limits_cpuset:
                  type: string
                limits_cpu_shares:
                  type: integer
                custom_labels:
                  type: string
                custom_docker_run_options:
                  type: string
                post_deployment_command:
                  type: string
                post_deployment_command_container:
                  type: string
                pre_deployment_command:
                  type: string
                pre_deployment_command_container:
                  type: string
                manual_webhook_secret_github:
                  type: string
                manual_webhook_secret_gitlab:
                  type: string
                manual_webhook_secret_bitbucket:
                  type: string
                manual_webhook_secret_gitea:
                  type: string
                redirect:
                  type: string
                  enum:
                    - both
                    - www
                    - non-www
                watch_paths:
                  type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  domains:
                    type: string
  /applications/private-deploy-key:
    post:
      summary: Application Create Private Deploy Key
      description: "Create a private application with a deplyo key."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_uuid
                - environment_name
                - server_uuid
                - private_key_uuid
                - build_pack
                - git_repository
                - git_branch
                - ports_exposes
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy application after creation.
                name:
                  type: string
                description:
                  type: string
                project_uuid:
                  type: string
                environment_name:
                  type: string
                server_uuid:
                  type: string
                destination_uuid:
                  type: string
                private_key_uuid:
                  type: string
                domains:
                  type: string
                is_static:
                  type: boolean
                git_repository:
                  type: string
                git_branch:
                  type: string
                git_commit_sha:
                  type: string
                docker_registry_image_name:
                  type: string
                docker_registry_image_tag:
                  type: string
                build_pack:
                  type: string
                install_command:
                  type: string
                build_command:
                  type: string
                start_command:
                  type: string
                ports_exposes:
                  type: string
                ports_mappings:
                  type: string
                base_directory:
                  type: string
                publish_directory:
                  type: string
                health_check_enabled:
                  type: boolean
                health_check_path:
                  type: string
                health_check_port:
                  type: integer
                health_check_host:
                  type: string
                health_check_method:
                  type: string
                health_check_return_code:
                  type: integer
                health_check_scheme:
                  type: string
                health_check_response_text:
                  type: string
                health_check_interval:
                  type: integer
                health_check_timeout:
                  type: integer
                health_check_retries:
                  type: integer
                health_check_start_period:
                  type: integer
                limits_memory:
                  type: string
                limits_memory_swap:
                  type: string
                limits_memory_swappiness:
                  type: integer
                limits_memory_reservation:
                  type: string
                limits_cpus:
                  type: string
                limits_cpuset:
                  type: string
                limits_cpu_shares:
                  type: integer
                custom_labels:
                  type: string
                custom_docker_run_options:
                  type: string
                post_deployment_command:
                  type: string
                post_deployment_command_container:
                  type: string
                pre_deployment_command:
                  type: string
                pre_deployment_command_container:
                  type: string
                manual_webhook_secret_github:
                  type: string
                manual_webhook_secret_gitlab:
                  type: string
                manual_webhook_secret_bitbucket:
                  type: string
                manual_webhook_secret_gitea:
                  type: string
                redirect:
                  type: string
                  enum:
                    - both
                    - www
                    - non-www
                watch_paths:
                  type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  domains:
                    type: string
  /applications/dockerfile:
    post:
      summary: Application Create Dockerfile
      description: "Create a dockerfile based application."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_uuid
                - environment_name
                - server_uuid
                - dockerfile
                - build_pack
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy application after creation.
                name:
                  type: string
                description:
                  type: string
                project_uuid:
                  type: string
                environment_name:
                  type: string
                server_uuid:
                  type: string
                destination_uuid:
                  type: string
                dockerfile:
                  type: string
                  description: Base64 encoded dockerfile.
                domains:
                  type: string
                ports_mappings:
                  type: string
                health_check_enabled:
                  type: boolean
                health_check_path:
                  type: string
                health_check_port:
                  type: integer
                health_check_host:
                  type: string
                health_check_method:
                  type: string
                health_check_return_code:
                  type: integer
                health_check_scheme:
                  type: string
                health_check_response_text:
                  type: string
                health_check_interval:
                  type: integer
                health_check_timeout:
                  type: integer
                health_check_retries:
                  type: integer
                health_check_start_period:
                  type: integer
                limits_memory:
                  type: string
                limits_memory_swap:
                  type: string
                limits_memory_swappiness:
                  type: integer
                limits_memory_reservation:
                  type: string
                limits_cpus:
                  type: string
                limits_cpuset:
                  type: string
                limits_cpu_shares:
                  type: integer
                custom_labels:
                  type: string
                custom_docker_run_options:
                  type: string
                post_deployment_command:
                  type: string
                post_deployment_command_container:
                  type: string
                pre_deployment_command:
                  type: string
                pre_deployment_command_container:
                  type: string
                manual_webhook_secret_github:
                  type: string
                manual_webhook_secret_gitlab:
                  type: string
                manual_webhook_secret_bitbucket:
                  type: string
                manual_webhook_secret_gitea:
                  type: string
                redirect:
                  type: string
                  enum:
                    - both
                    - www
                    - non-www
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  domains:
                    type: string
  /applications/docker-image:
    post:
      summary: Application Create Docker Image
      description: "Create an application based on an existing Docker Image."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_uuid
                - environment_name
                - server_uuid
                - docker_registry_image_name
                - ports_exposes
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy application after creation.
                name:
                  type: string
                description:
                  type: string
                project_uuid:
                  type: string
                environment_name:
                  type: string
                server_uuid:
                  type: string
                destination_uuid:
                  type: string
                docker_registry_image_name:
                  type: string
                docker_registry_image_tag:
                  type: string
                domains:
                  type: string
                is_static:
                  type: boolean
                git_repository:
                  type: string
                git_branch:
                  type: string
                git_commit_sha:
                  type: string
                ports_exposes:
                  type: string
                ports_mappings:
                  type: string
                health_check_enabled:
                  type: boolean
                health_check_path:
                  type: string
                health_check_port:
                  type: integer
                health_check_host:
                  type: string
                health_check_method:
                  type: string
                health_check_return_code:
                  type: integer
                health_check_scheme:
                  type: string
                health_check_response_text:
                  type: string
                health_check_interval:
                  type: integer
                health_check_timeout:
                  type: integer
                health_check_retries:
                  type: integer
                health_check_start_period:
                  type: integer
                limits_memory:
                  type: string
                limits_memory_swap:
                  type: string
                limits_memory_swappiness:
                  type: integer
                limits_memory_reservation:
                  type: string
                limits_cpus:
                  type: string
                limits_cpuset:
                  type: string
                limits_cpu_shares:
                  type: integer
                custom_labels:
                  type: string
                custom_docker_run_options:
                  type: string
                post_deployment_command:
                  type: string
                post_deployment_command_container:
                  type: string
                pre_deployment_command:
                  type: string
                pre_deployment_command_container:
                  type: string
                manual_webhook_secret_github:
                  type: string
                manual_webhook_secret_gitlab:
                  type: string
                manual_webhook_secret_bitbucket:
                  type: string
                manual_webhook_secret_gitea:
                  type: string
                redirect:
                  type: string
                  enum:
                    - both
                    - www
                    - non-www
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  domains:
                    type: string
  /applications/dockercompose:
    post:
      summary: Application Create Docker Compose
      description: "Create an application based on a docker-compose file."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_uuid
                - environment_name
                - server_uuid
                - docker_compose_raw
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy application after creation.
                name:
                  type: string
                  description: "The name of the application."
                description:
                  type: string
                  description: "A description for the application."
                project_uuid:
                  type: string
                  description: "The project's UUID."
                environment_name:
                  type: string
                  description: "The environment's name."
                server_uuid:
                  type: string
                  description: "The server's UUID."
                destination_uuid:
                  type: string
                  description: "The destination's UUID if the server has more than one destinations."
                docker_compose_raw:
                  type: string
                  description: Base64 encoded docker-compose file.
                redirect:
                  type: string
                  description: "Redirect type between www and non-www."
                  enum:
                    - both
                    - www
                    - non-www
                docker_compose_domains:
                  type: array
                  description: "Domains for the application. The `name` should be the same as as the service name inside the docker-compose file."
                  example:
                    - name: app
                      domain: app.com
                    - name: app2
                      domain: app2.com
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      domain:
                        type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  domains:
                    type: string
  /applications/{uuid}:
    get:
      summary: Application By UUID
      description: "Get an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  additional_servers:
                    type: array
                    items:
                      type: string
                  base_directory:
                    type: string
                  build_command:
                    type: string
                  build_pack:
                    type: string
                  config_hash:
                    type: string
                  custom_docker_run_options:
                    type: string
                  custom_healthcheck_found:
                    type: boolean
                  custom_labels:
                    type: string
                  destination_id:
                    type: integer
                  destination_type:
                    type: string
                  docker_compose:
                    type: string
                  docker_compose_custom_build_command:
                    type: string
                  docker_compose_custom_start_command:
                    type: string
                  docker_compose_domains:
                    type: string
                  docker_compose_location:
                    type: string
                  docker_compose_raw:
                    type: string
                  docker_registry_image_name:
                    type: string
                  docker_registry_image_tag:
                    type: string
                  dockerfile:
                    type: string
                  dockerfile_location:
                    type: string
                  dockerfile_target_build:
                    type: string
                  environment_id:
                    type: integer
                  fqdn:
                    type: string
                  git_branch:
                    type: string
                  git_commit_sha:
                    type: string
                  git_full_url:
                    type: string
                  git_repository:
                    type: string
                  health_check_enabled:
                    type: boolean
                  health_check_host:
                    type: string
                  health_check_interval:
                    type: integer
                  health_check_method:
                    type: string
                  health_check_path:
                    type: string
                  health_check_port:
                    type: integer
                  health_check_response_text:
                    type: string
                  health_check_retries:
                    type: integer
                  health_check_return_code:
                    type: integer
                  health_check_scheme:
                    type: string
                  health_check_start_period:
                    type: integer
                  health_check_timeout:
                    type: integer
                  install_command:
                    type: string
                  laravel_through_key:
                    type: integer
                  limits_cpu_shares:
                    type: integer
                  limits_cpus:
                    type: string
                  limits_cpuset:
                    type: string
                  limits_memory:
                    type: string
                  limits_memory_reservation:
                    type: string
                  limits_memory_swap:
                    type: string
                  limits_memory_swappiness:
                    type: integer
                  manual_webhook_secret_bitbucket:
                    type: string
                  manual_webhook_secret_gitea:
                    type: string
                  manual_webhook_secret_github:
                    type: string
                  manual_webhook_secret_gitlab:
                    type: string
                  ports_exposes:
                    type: string
                  ports_mappings:
                    type: string
                  post_deployment_command:
                    type: string
                  post_deployment_command_container:
                    type: string
                  pre_deployment_command:
                    type: string
                  pre_deployment_command_container:
                    type: string
                  preview_url_template:
                    type: string
                  private_key_id:
                    type: integer
                  publish_directory:
                    type: string
                  redirect:
                    type: string
                    enum:
                      - both
                      - www
                      - non-www
                  repository_project_id:
                    type: integer
                  source_id:
                    type: integer
                  source_type:
                    type: string
                  start_command:
                    type: string
                  static_image:
                    type: string
                  status:
                    type: string
                  swarm_placement_constraints:
                    type: string
                  swarm_replicas:
                    type: integer
                  watch_paths:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  deleted_at:
                    type: string
                    format: date-time
    patch:
      summary: Application Update By UUID
      description: "Update an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - private_key
              properties:
                name:
                  type: string
                description:
                  type: string
                base_directory:
                  type: string
                build_command:
                  type: string
                build_pack:
                  type: string
                custom_docker_run_options:
                  type: string
                docker_compose:
                  type: string
                docker_compose_custom_build_command:
                  type: string
                docker_compose_custom_start_command:
                  type: string
                docker_compose_domains:
                  type: string
                docker_compose_location:
                  type: string
                docker_compose_raw:
                  type: string
                docker_registry_image_name:
                  type: string
                docker_registry_image_tag:
                  type: string
                dockerfile:
                  type: string
                dockerfile_location:
                  type: string
                dockerfile_target_build:
                  type: string
                domains:
                  type: string
                git_branch:
                  type: string
                git_commit_sha:
                  type: string
                git_repository:
                  type: string
                health_check_enabled:
                  type: boolean
                health_check_host:
                  type: string
                health_check_interval:
                  type: integer
                health_check_method:
                  type: string
                health_check_path:
                  type: string
                health_check_port:
                  type: integer
                health_check_response_text:
                  type: string
                health_check_retries:
                  type: integer
                health_check_return_code:
                  type: integer
                health_check_scheme:
                  type: string
                health_check_start_period:
                  type: integer
                health_check_timeout:
                  type: integer
                install_command:
                  type: string
                limits_cpu_shares:
                  type: integer
                limits_cpus:
                  type: string
                limits_cpuset:
                  type: string
                limits_memory:
                  type: string
                limits_memory_reservation:
                  type: string
                limits_memory_swap:
                  type: string
                limits_memory_swappiness:
                  type: integer
                manual_webhook_secret_bitbucket:
                  type: string
                manual_webhook_secret_gitea:
                  type: string
                manual_webhook_secret_github:
                  type: string
                manual_webhook_secret_gitlab:
                  type: string
                ports_exposes:
                  type: string
                ports_mappings:
                  type: string
                post_deployment_command:
                  type: string
                post_deployment_command_container:
                  type: string
                pre_deployment_command:
                  type: string
                pre_deployment_command_container:
                  type: string
                preview_url_template:
                  type: string
                publish_directory:
                  type: string
                redirect:
                  type: string
                  enum:
                    - both
                    - www
                    - non-www
                start_command:
                  type: string
                static_image:
                  type: string
                swarm_placement_constraints:
                  type: string
                swarm_replicas:
                  type: integer
                watch_paths:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  additional_servers:
                    type: array
                    items:
                      type: string
                  base_directory:
                    type: string
                  build_command:
                    type: string
                  build_pack:
                    type: string
                  config_hash:
                    type: string
                  custom_docker_run_options:
                    type: string
                  custom_healthcheck_found:
                    type: boolean
                  custom_labels:
                    type: string
                  destination_id:
                    type: integer
                  destination_type:
                    type: string
                  docker_compose:
                    type: string
                  docker_compose_custom_build_command:
                    type: string
                  docker_compose_custom_start_command:
                    type: string
                  docker_compose_domains:
                    type: string
                  docker_compose_location:
                    type: string
                  docker_compose_raw:
                    type: string
                  docker_registry_image_name:
                    type: string
                  docker_registry_image_tag:
                    type: string
                  dockerfile:
                    type: string
                  dockerfile_location:
                    type: string
                  dockerfile_target_build:
                    type: string
                  environment_id:
                    type: integer
                  fqdn:
                    type: string
                  git_branch:
                    type: string
                  git_commit_sha:
                    type: string
                  git_full_url:
                    type: string
                  git_repository:
                    type: string
                  health_check_enabled:
                    type: boolean
                  health_check_host:
                    type: string
                  health_check_interval:
                    type: integer
                  health_check_method:
                    type: string
                  health_check_path:
                    type: string
                  health_check_port:
                    type: integer
                  health_check_response_text:
                    type: string
                  health_check_retries:
                    type: integer
                  health_check_return_code:
                    type: integer
                  health_check_scheme:
                    type: string
                  health_check_start_period:
                    type: integer
                  health_check_timeout:
                    type: integer
                  install_command:
                    type: string
                  laravel_through_key:
                    type: integer
                  limits_cpu_shares:
                    type: integer
                  limits_cpus:
                    type: string
                  limits_cpuset:
                    type: string
                  limits_memory:
                    type: string
                  limits_memory_reservation:
                    type: string
                  limits_memory_swap:
                    type: string
                  limits_memory_swappiness:
                    type: integer
                  manual_webhook_secret_bitbucket:
                    type: string
                  manual_webhook_secret_gitea:
                    type: string
                  manual_webhook_secret_github:
                    type: string
                  manual_webhook_secret_gitlab:
                    type: string
                  ports_exposes:
                    type: string
                  ports_mappings:
                    type: string
                  post_deployment_command:
                    type: string
                  post_deployment_command_container:
                    type: string
                  pre_deployment_command:
                    type: string
                  pre_deployment_command_container:
                    type: string
                  preview_url_template:
                    type: string
                  private_key_id:
                    type: integer
                  publish_directory:
                    type: string
                  redirect:
                    type: string
                    enum:
                      - both
                      - www
                      - non-www
                  repository_project_id:
                    type: integer
                  source_id:
                    type: integer
                  source_type:
                    type: string
                  start_command:
                    type: string
                  static_image:
                    type: string
                  status:
                    type: string
                  swarm_placement_constraints:
                    type: string
                  swarm_replicas:
                    type: integer
                  watch_paths:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  deleted_at:
                    type: string
                    format: date-time
    delete:
      summary: Application Delete By UUID
      description: "Delete an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthenticated."
        "404":
          description: Application not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Application not found."
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Application deleted."
  /applications/{uuid}/envs:
    get:
      summary: Application Environments By UUID
      description: "Get the environments of an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the entry"
                  application_id:
                    type: integer
                    description: "ID of the application"
                  is_build_time:
                    type: boolean
                    description: "Indicates if this is a build-time variable"
                  is_literal:
                    type: boolean
                    description: "Indicates if the value is a literal string"
                  is_multiline:
                    type: boolean
                    description: "Indicates if the value allows multiple lines"
                  is_preview:
                    type: boolean
                    description: "Indicates if this is a preview configuration"
                  is_shared:
                    type: boolean
                    description: "Indicates if this configuration is shared"
                  is_shown_once:
                    type: boolean
                    description: "Indicates if this value is shown only once"
                  key:
                    type: string
                    description: "The environment variable's key"
                  real_value:
                    type: string
                    description: "The actual value of the environment variable"
                  value:
                    type: string
                    description: "The value with templating applied"
                  version:
                    type: string
                    description: "Version of the configuration"
                  created_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the entry was created"
                  updated_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the entry was last updated"
    post:
      summary: Application Environments Create By UUID
      description: "Create an environment variable of an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - value
              properties:
                key:
                  type: string
                value:
                  type: string
                is_preview:
                  type: boolean
                is_build_time:
                  type: boolean
                is_literal:
                  type: boolean
                is_multiline:
                  type: boolean
                is_shown_once:
                  type: boolean
      responses:
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Environment variable already exists."
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the entry"
                  application_id:
                    type: integer
                    description: "ID of the application"
                  is_build_time:
                    type: boolean
                    description: "Indicates if this is a build-time variable"
                  is_literal:
                    type: boolean
                    description: "Indicates if the value is a literal string"
                  is_multiline:
                    type: boolean
                    description: "Indicates if the value allows multiple lines"
                  is_preview:
                    type: boolean
                    description: "Indicates if this is a preview configuration"
                  key:
                    type: string
                    description: "The environment variable's key"
                  real_value:
                    type: string
                    description: "The actual value of the environment variable"
                  value:
                    type: string
                    description: "The value with templating applied"
                  version:
                    type: string
                    description: "Version of the configuration"
                  created_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the entry was created"
                  updated_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the entry was last updated"
    patch:
      summary: Application Environments Update By UUID
      description: "Update an extising environment variable of an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - value
              properties:
                key:
                  type: string
                value:
                  type: string
                is_preview:
                  type: boolean
                is_build_time:
                  type: boolean
                is_literal:
                  type: boolean
                is_multiline:
                  type: boolean
                is_shown_once:
                  type: boolean
      responses:
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Environment variable already exists."
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the entry"
                  application_id:
                    type: integer
                    description: "ID of the application"
                  is_build_time:
                    type: boolean
                    description: "Indicates if this is a build-time variable"
                  is_literal:
                    type: boolean
                    description: "Indicates if the value is a literal string"
                  is_multiline:
                    type: boolean
                    description: "Indicates if the value allows multiple lines"
                  is_preview:
                    type: boolean
                    description: "Indicates if this is a preview configuration"
                  key:
                    type: string
                    description: "The environment variable's key"
                  real_value:
                    type: string
                    description: "The actual value of the environment variable"
                  value:
                    type: string
                    description: "The value with templating applied"
                  version:
                    type: string
                    description: "Version of the configuration"
                  created_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the entry was created"
                  updated_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the entry was last updated"
  /applications/{uuid}/envs/bulk:
    post:
      summary: Application Environments Bulk Create By UUID
      description: "Create multiple environment variables of an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: "List of key-value pairs"
              items:
                type: object
                required:
                  - key
                  - value
                properties:
                  key:
                    type: string
                  value:
                    type: string
                  is_preview:
                    type: boolean
                  is_build_time:
                    type: boolean
                  is_literal:
                    type: boolean
                  is_multiline:
                    type: boolean
                  is_shown_once:
                    type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Environment variable deleted."
  /applications/{uuid}/envs/{env_uuid}:
    delete:
      summary: Application Environments Delete By UUID
      description: "Delete an environment variable of an application by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
        - in: path
          name: env_uuid
          required: true
          schema:
            type: string
          description: The environment variable's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Environment variable deleted."
  /applications/{uuid}/start:
    get:
      summary: Application Deploy By UUID
      description: "Deploy an application by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Deployment request queued."
                  deployment_uuid:
                    type: string
                  deployment_api_url:
                    type: string
  /applications/{uuid}/stop:
    get:
      summary: Application Stop By UUID
      description: "Stop an application by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Application stopping request queued."
  /applications/{uuid}/restart:
    get:
      summary: Application Restart By UUID
      description: "Restart an application by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The application's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Restart request queued."
                  deployment_uuid:
                    type: string
                  deployment_api_url:
                    type: string
  /databases:
    get:
      summary: Databases List
      description: "Get the list of databases."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: "Unique identifier for the entry"
                    name:
                      type: string
                      description: "The name of the database"
                    config_hash:
                      type: string
                      description: "Configuration hash"
                    database_type:
                      type: string
                      description: "Type of the database"
                    deleted_at:
                      type: string
                      description: "Timestamp when the entry was deleted"
                      nullable: true
                    description:
                      type: string
                      description: "Description of the database"
                      nullable: true
                    destination_id:
                      type: integer
                      description: "ID of the destination"
                    destination_type:
                      type: string
                      description: "Type of the destination"
                    environment_id:
                      type: integer
                      description: "ID of the associated environment"
                    external_db_url:
                      type: string
                      description: "URL for external database access"
                      nullable: true
                    internal_db_url:
                      type: string
                      description: "Internal URL for database access"
                    image:
                      type: string
                      description: "Docker image to be used"
                    init_scripts:
                      type: string
                      description: "Initialization scripts for the database"
                      nullable: true
                    is_include_timestamps:
                      type: boolean
                      description: "Indicates if timestamps should be included"
                    is_log_drain_enabled:
                      type: boolean
                      description: "Indicates if log draining is enabled"
                    is_public:
                      type: boolean
                      description: "Indicates if the database is public"
                    limits_cpu_shares:
                      type: integer
                      description: "CPU share limits"
                    limits_cpus:
                      type: string
                      description: "CPU limits"
                    limits_cpuset:
                      type: string
                      description: "CPU set limits"
                      nullable: true
                    limits_memory:
                      type: string
                      description: "Memory limits"
                    limits_memory_reservation:
                      type: string
                      description: "Memory reservation limits"
                    limits_memory_swap:
                      type: string
                      description: "Memory swap limits"
                    limits_memory_swappiness:
                      type: integer
                      description: "Memory swappiness limits"
                    ports_mappings:
                      type: string
                      description: "Port mappings"
                      nullable: true
                    postgres_conf:
                      type: string
                      description: "PostgreSQL configuration"
                      nullable: true
                    postgres_db:
                      type: string
                      description: "PostgreSQL database name"
                    postgres_host_auth_method:
                      type: string
                      description: "PostgreSQL host authentication method"
                      nullable: true
                    postgres_initdb_args:
                      type: string
                      description: "PostgreSQL initialization database arguments"
                      nullable: true
                    postgres_password:
                      type: string
                      description: "PostgreSQL password"
                    postgres_user:
                      type: string
                      description: "PostgreSQL user"
                    public_port:
                      type: integer
                      description: "Public port for database access"
                    started_at:
                      type: string
                      description: "Timestamp when the database was started for the first time"
                      format: date-time
                    status:
                      type: string
                      description: "Current status of the database"
                    created_at:
                      type: string
                      description: "Timestamp when the entry was created"
                      format: date-time
                    updated_at:
                      type: string
                      description: "Timestamp when the entry was last updated"
                      format: date-time
    post:
      summary: Database Create
      description: "Create a database."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy database after creation.
                name:
                  type: string
                  maxLength: 255
                  description: "The name of the entry"
                description:
                  type: string
                  nullable: true
                  description: "Description of the entry"
                image:
                  type: string
                  description: "The image to be used"
                is_public:
                  type: boolean
                  description: "Indicates if the entry is public"
                public_port:
                  type: number
                  nullable: true
                  description: "Public port for access"
                limits_memory:
                  type: string
                  description: "Memory limit"
                limits_memory_swap:
                  type: string
                  description: "Memory swap limit"
                limits_memory_swappiness:
                  type: number
                  description: "Memory swappiness limit"
                limits_memory_reservation:
                  type: string
                  description: "Memory reservation limit"
                limits_cpus:
                  type: string
                  description: "CPU limit"
                limits_cpuset:
                  type: string
                  nullable: true
                  description: "CPU set limit"
                limits_cpu_shares:
                  type: number
                  description: "CPU share limit"
                postgres_user:
                  type: string
                  description: "PostgreSQL user"
                postgres_password:
                  type: string
                  description: "PostgreSQL password"
                postgres_db:
                  type: string
                  description: "PostgreSQL database name"
                postgres_initdb_args:
                  type: string
                  description: "PostgreSQL initialization database arguments"
                postgres_host_auth_method:
                  type: string
                  description: "PostgreSQL host authentication method"
                postgres_conf:
                  type: string
                  description: "Base64 encoded custom PostgreSQL configuration"
                clickhouse_admin_user:
                  type: string
                  description: "ClickHouse admin user"
                clickhouse_admin_password:
                  type: string
                  description: "ClickHouse admin password"
                dragonfly_password:
                  type: string
                  description: "Dragonfly password"
                redis_password:
                  type: string
                  description: "Redis password"
                redis_conf:
                  type: string
                  description: "Base64 encoded custom Redis configuration"
                keydb_password:
                  type: string
                  description: "KeyDB password"
                keydb_conf:
                  type: string
                  description: "Base64 encoded custom KeyDB configuration"
                mariadb_conf:
                  type: string
                  description: "Base64 encoded custom MariaDB configuration"
                mariadb_root_password:
                  type: string
                  description: "MariaDB root password"
                mariadb_user:
                  type: string
                  description: "MariaDB user"
                mariadb_password:
                  type: string
                  description: "MariaDB password"
                mariadb_database:
                  type: string
                  description: "MariaDB database"
                mongo_conf:
                  type: string
                  description: "Base64 encoded custom MongoDB configuration"
                mongo_initdb_root_username:
                  type: string
                  description: "MongoDB initial root username"
                mongo_initdb_root_password:
                  type: string
                  description: "MongoDB initial root password"
                mongo_initdb_init_database:
                  type: string
                  description: "MongoDB initial database"
                mysql_root_password:
                  type: string
                  description: "MySQL root password"
                mysql_user:
                  type: string
                  description: "MySQL user"
                mysql_database:
                  type: string
                  description: "MySQL database"
                mysql_conf:
                  type: string
                  description: "Base64 encoded customMySQL configuration"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the new database"
  /databases/{uuid}:
    get:
      summary: Database By UUID
      description: "Get a database by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The database's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the entry"
                  name:
                    type: string
                    description: "The name of the database"
                  config_hash:
                    type: string
                    description: "Configuration hash"
                  database_type:
                    type: string
                    description: "Type of the database"
                  deleted_at:
                    type: string
                    description: "Timestamp when the entry was deleted"
                    nullable: true
                  description:
                    type: string
                    description: "Description of the database"
                    nullable: true
                  destination_id:
                    type: integer
                    description: "ID of the destination"
                  destination_type:
                    type: string
                    description: "Type of the destination"
                  environment_id:
                    type: integer
                    description: "ID of the associated environment"
                  external_db_url:
                    type: string
                    description: "URL for external database access"
                    nullable: true
                  internal_db_url:
                    type: string
                    description: "Internal URL for database access"
                  image:
                    type: string
                    description: "Docker image to be used"
                  init_scripts:
                    type: string
                    description: "Initialization scripts for the database"
                    nullable: true
                  is_include_timestamps:
                    type: boolean
                    description: "Indicates if timestamps should be included"
                  is_log_drain_enabled:
                    type: boolean
                    description: "Indicates if log draining is enabled"
                  is_public:
                    type: boolean
                    description: "Indicates if the database is public"
                  limits_cpu_shares:
                    type: integer
                    description: "CPU share limits"
                  limits_cpus:
                    type: string
                    description: "CPU limits"
                  limits_cpuset:
                    type: string
                    description: "CPU set limits"
                    nullable: true
                  limits_memory:
                    type: string
                    description: "Memory limits"
                  limits_memory_reservation:
                    type: string
                    description: "Memory reservation limits"
                  limits_memory_swap:
                    type: string
                    description: "Memory swap limits"
                  limits_memory_swappiness:
                    type: integer
                    description: "Memory swappiness limits"
                  ports_mappings:
                    type: string
                    description: "Port mappings"
                    nullable: true
                  postgres_conf:
                    type: string
                    description: "PostgreSQL configuration"
                    nullable: true
                  postgres_db:
                    type: string
                    description: "PostgreSQL database name"
                  postgres_host_auth_method:
                    type: string
                    description: "PostgreSQL host authentication method"
                    nullable: true
                  postgres_initdb_args:
                    type: string
                    description: "PostgreSQL initialization database arguments"
                    nullable: true
                  postgres_password:
                    type: string
                    description: "PostgreSQL password"
                  postgres_user:
                    type: string
                    description: "PostgreSQL user"
                  public_port:
                    type: integer
                    description: "Public port for database access"
                  started_at:
                    type: string
                    description: "Timestamp when the database was started for the first time"
                    format: date-time
                  status:
                    type: string
                    description: "Current status of the database"
                  created_at:
                    type: string
                    description: "Timestamp when the entry was created"
                    format: date-time
                  updated_at:
                    type: string
                    description: "Timestamp when the entry was last updated"
                    format: date-time
    patch:
      summary: Database Update By UUID
      description: "Update a database by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The database's UUID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                  description: "The name of the entry"
                description:
                  type: string
                  nullable: true
                  description: "Description of the entry"
                image:
                  type: string
                  description: "The image to be used"
                is_public:
                  type: boolean
                  description: "Indicates if the entry is public"
                public_port:
                  type: number
                  nullable: true
                  description: "Public port for access"
                limits_memory:
                  type: string
                  description: "Memory limit"
                limits_memory_swap:
                  type: string
                  description: "Memory swap limit"
                limits_memory_swappiness:
                  type: number
                  description: "Memory swappiness limit"
                limits_memory_reservation:
                  type: string
                  description: "Memory reservation limit"
                limits_cpus:
                  type: string
                  description: "CPU limit"
                limits_cpuset:
                  type: string
                  nullable: true
                  description: "CPU set limit"
                limits_cpu_shares:
                  type: number
                  description: "CPU share limit"
                postgres_user:
                  type: string
                  description: "PostgreSQL user"
                postgres_password:
                  type: string
                  description: "PostgreSQL password"
                postgres_db:
                  type: string
                  description: "PostgreSQL database name"
                postgres_initdb_args:
                  type: string
                  description: "PostgreSQL initialization database arguments"
                postgres_host_auth_method:
                  type: string
                  description: "PostgreSQL host authentication method"
                postgres_conf:
                  type: string
                  description: "Base64 encoded custom PostgreSQL configuration"
                clickhouse_admin_user:
                  type: string
                  description: "ClickHouse admin user"
                clickhouse_admin_password:
                  type: string
                  description: "ClickHouse admin password"
                dragonfly_password:
                  type: string
                  description: "Dragonfly password"
                redis_password:
                  type: string
                  description: "Redis password"
                redis_conf:
                  type: string
                  description: "Base64 encoded custom Redis configuration"
                keydb_password:
                  type: string
                  description: "KeyDB password"
                keydb_conf:
                  type: string
                  description: "Base64 encoded custom KeyDB configuration"
                mariadb_conf:
                  type: string
                  description: "Base64 encoded custom MariaDB configuration"
                mariadb_root_password:
                  type: string
                  description: "MariaDB root password"
                mariadb_user:
                  type: string
                  description: "MariaDB user"
                mariadb_password:
                  type: string
                  description: "MariaDB password"
                mariadb_database:
                  type: string
                  description: "MariaDB database"
                mongo_conf:
                  type: string
                  description: "Base64 encoded custom MongoDB configuration"
                mongo_initdb_root_username:
                  type: string
                  description: "MongoDB initial root username"
                mongo_initdb_root_password:
                  type: string
                  description: "MongoDB initial root password"
                mongo_initdb_init_database:
                  type: string
                  description: "MongoDB initial database"
                mysql_root_password:
                  type: string
                  description: "MySQL root password"
                mysql_user:
                  type: string
                  description: "MySQL user"
                mysql_database:
                  type: string
                  description: "MySQL database"
                mysql_conf:
                  type: string
                  description: "Base64 encoded customMySQL configuration"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Database updated."
    delete:
      summary: Database Delete By UUID
      description: "Delete a database by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The database's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Database deleted."
  /databases/{uuid}/start:
    get:
      summary: Database Deploy By UUID
      description: "Deploy a database by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The database's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Deployment request queued."
  /databases/{uuid}/stop:
    get:
      summary: Database Stop By UUID
      description: "Stop a database by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The database's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Database stopping request queued."
  /databases/{uuid}/restart:
    get:
      summary: Database Restart By UUID
      description: "Restart a database by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The database's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Restart request queued."
  /services:
    get:
      summary: Services List
      description: "Get the list of services."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the service"
                  name:
                    type: string
                    description: "Name of the service"
                  description:
                    type: string
                    description: "Description of the service"
                    nullable: true
                  environment_id:
                    type: integer
                    description: "ID of the associated environment"
                  server_id:
                    type: integer
                    description: "ID of the server where the service is running"
                  docker_compose_raw:
                    type: string
                    description: "Raw Docker Compose configuration"
                  docker_compose:
                    type: string
                    description: "Parsed Docker Compose configuration"
                  destination_type:
                    type: string
                    description: "Type of the destination"
                  destination_id:
                    type: integer
                    description: "ID of the destination"
                  connect_to_docker_network:
                    type: boolean
                    description: "Indicates if the service is connected to a Docker network"
                  config_hash:
                    type: string
                    description: "Configuration hash of the service"
                  service_type:
                    type: string
                    description: "Type of the service"
                    nullable: true
                  is_container_label_escape_enabled:
                    type: boolean
                    description: "Indicates if container label escape is enabled"
                  created_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the service was created"
                  updated_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the service was last updated"
                  deleted_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the service was deleted"
                    nullable: true
    post:
      summary: Service Create
      description: "Create a service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instant_deploy:
                  type: boolean
                  default: false
                  description: Deploy database after creation.
                type:
                  type: string
                  description: "Type of the service"
                  enum:
                    - activepieces
                    - appsmith
                    - appwrite
                    - authentik
                    - babybuddy
                    - budge
                    - changedetection
                    - chatwoot
                    - classicpress-with-mariadb
                    - classicpress-with-mysql
                    - classicpress-without-database
                    - cloudflared
                    - code-server
                    - dashboard
                    - directus
                    - directus-with-postgresql
                    - docker-registry
                    - docuseal
                    - docuseal-with-postgres
                    - dokuwiki
                    - duplicati
                    - emby
                    - embystat
                    - fider
                    - filebrowser
                    - firefly
                    - formbricks
                    - ghost
                    - gitea
                    - gitea-with-mariadb
                    - gitea-with-mysql
                    - gitea-with-postgresql
                    - glance
                    - glances
                    - glitchtip
                    - grafana
                    - grafana-with-postgresql
                    - grocy
                    - heimdall
                    - homepage
                    - jellyfin
                    - kuzzle
                    - listmonk
                    - logto
                    - mediawiki
                    - meilisearch
                    - metabase
                    - metube
                    - minio
                    - moodle
                    - n8n
                    - n8n-with-postgresql
                    - next-image-transformation
                    - nextcloud
                    - nocodb
                    - odoo
                    - openblocks
                    - pairdrop
                    - penpot
                    - phpmyadmin
                    - pocketbase
                    - posthog
                    - reactive-resume
                    - rocketchat
                    - shlink
                    - slash
                    - snapdrop
                    - statusnook
                    - stirling-pdf
                    - supabase
                    - syncthing
                    - tolgee
                    - trigger
                    - trigger-with-external-database
                    - twenty
                    - umami
                    - unleash-with-postgresql
                    - unleash-without-database
                    - uptime-kuma
                    - vaultwarden
                    - vikunja
                    - weblate
                    - whoogle
                    - wordpress-with-mariadb
                    - wordpress-with-mysql
                    - wordpress-without-database
                name:
                  type: string
                  maxLength: 255
                  description: "The name of the entry"
                description:
                  type: string
                  nullable: true
                  description: "Description of the entry"
                project_uuid:
                  type: string
                  description: "The project's UUID"
                server_uuid:
                  type: string
                  description: "The server's UUID"
                environment_name:
                  type: string
                  description: "The environment's name"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the new service"
                  domains:
                    type: array
                    items:
                      type: string
                    description: "List of domains"
  /services/{uuid}:
    get:
      summary: Service By UUID
      description: "Get a service by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The service's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: "Unique identifier for the service"
                  name:
                    type: string
                    description: "Name of the service"
                  description:
                    type: string
                    description: "Description of the service"
                    nullable: true
                  environment_id:
                    type: integer
                    description: "ID of the associated environment"
                  server_id:
                    type: integer
                    description: "ID of the server where the service is running"
                  docker_compose_raw:
                    type: string
                    description: "Raw Docker Compose configuration"
                  docker_compose:
                    type: string
                    description: "Parsed Docker Compose configuration"
                  destination_type:
                    type: string
                    description: "Type of the destination"
                  destination_id:
                    type: integer
                    description: "ID of the destination"
                  connect_to_docker_network:
                    type: boolean
                    description: "Indicates if the service is connected to a Docker network"
                  config_hash:
                    type: string
                    description: "Configuration hash of the service"
                  service_type:
                    type: string
                    description: "Type of the service"
                    nullable: true
                  is_container_label_escape_enabled:
                    type: boolean
                    description: "Indicates if container label escape is enabled"
                  created_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the service was created"
                  updated_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the service was last updated"
                  deleted_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the service was deleted"
                    nullable: true
    delete:
      summary: Service Delete By UUID
      description: "Delete a service by UUID."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The service's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Service deleted."
  /services/{uuid}/start:
    get:
      summary: Service Deploy By UUID
      description: "Deploy a service by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The service's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "DService starting request queued."
  /services/{uuid}/stop:
    get:
      summary: Service Stop By UUID
      description: "Stop a service by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The service's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Service stopping request queued."
  /services/{uuid}/restart:
    get:
      summary: Service Restart By UUID
      description: "Restart a service by UUID. You can use `POST` or `GET` requests as well."
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The service's UUID.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Service restarting request queued."
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Go to `Keys & Tokens` / `API tokens` and create a new token. Use the token as the bearer token."
security:
  - bearerAuth: []
